<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyj.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.wyj.model.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_gender" jdbcType="CHAR" property="empGender" />
    <result column="emp_password" jdbcType="VARCHAR" property="empPassword" />
    <result column="emp_grade" jdbcType="VARCHAR" property="empGrade" />
    <result column="emp_email" jdbcType="VARCHAR" property="empEmail" />
    <result column="emp_department_id" jdbcType="INTEGER" property="empDepartmentId" />
  </resultMap>

	<!-- 此处sql语句为自行添加，逆向工程没有生成 -->
	<select id="checkUser" parameterType="String" resultType="com.wyj.model.Employee">
		select * from employee where emp_name=#{0} and emp_password=#{1}
	</select>
	<!-- 此处sql语句为自行添加，逆向工程没有生成 -->
	<select id="getTotalCount" resultType="java.lang.Integer"> 
		select count(*) from employee
	</select>
	<!-- 此处sql语句为自行添加，逆向工程没有生成 -->
	<select id="getAllEmployeeByPage" parameterType="Integer" resultMap="employee"> 
		select * from employee e LEFT JOIN department d on e.emp_department_id = d.department_id limit #{0},#{1}
	</select>
	<!-- 此处sql语句为自行添加，逆向工程没有生成 -->
	<select id="getAllEmployee" parameterType="com.wyj.model.EmployeeExample" resultMap="employee">
		<!-- 使用的是左外连接，不要使用子查询 -->
		select * from employee e  LEFT JOIN  department d on e.emp_department_id = d.department_id limit 0,10
	</select>
	
	<resultMap id="employee" type="com.wyj.model.Employee">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_gender" jdbcType="CHAR" property="empGender" />
    <result column="emp_password" jdbcType="VARCHAR" property="empPassword" />
    <result column="emp_grade" jdbcType="VARCHAR" property="empGrade" />
    <result column="emp_email" jdbcType="VARCHAR" property="empEmail" />
    <result column="emp_department_id" jdbcType="INTEGER" property="empDepartmentId" />
    <association property="department" javaType="com.wyj.model.Department">
    	<result column="department_id" property="departmentId"/>
    	<result column="department_name" property="departmentName"/>
    	<result column="department_leader" property="departmentLeader"/>
    	<result column="department_address" property="departmentAddress"/>
    </association>
  </resultMap> 
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_id, emp_name, emp_gender, emp_password, emp_grade, emp_email, emp_department_id
  </sql>
  <select id="selectByExample" parameterType="com.wyj.model.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wyj.model.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wyj.model.Employee">
    insert into employee (id, emp_id, emp_name, 
      emp_gender, emp_password, emp_grade, 
      emp_email, emp_department_id)
    values (#{id,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, 
      #{empGender,jdbcType=CHAR}, #{empPassword,jdbcType=VARCHAR}, #{empGrade,jdbcType=VARCHAR}, 
      #{empEmail,jdbcType=VARCHAR}, #{empDepartmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wyj.model.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empGender != null">
        emp_gender,
      </if>
      <if test="empPassword != null">
        emp_password,
      </if>
      <if test="empGrade != null">
        emp_grade,
      </if>
      <if test="empEmail != null">
        emp_email,
      </if>
      <if test="empDepartmentId != null">
        emp_department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empGender != null">
        #{empGender,jdbcType=CHAR},
      </if>
      <if test="empPassword != null">
        #{empPassword,jdbcType=VARCHAR},
      </if>
      <if test="empGrade != null">
        #{empGrade,jdbcType=VARCHAR},
      </if>
      <if test="empEmail != null">
        #{empEmail,jdbcType=VARCHAR},
      </if>
      <if test="empDepartmentId != null">
        #{empDepartmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wyj.model.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.empGender != null">
        emp_gender = #{record.empGender,jdbcType=CHAR},
      </if>
      <if test="record.empPassword != null">
        emp_password = #{record.empPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.empGrade != null">
        emp_grade = #{record.empGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.empEmail != null">
        emp_email = #{record.empEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.empDepartmentId != null">
        emp_department_id = #{record.empDepartmentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set id = #{record.id,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      emp_gender = #{record.empGender,jdbcType=CHAR},
      emp_password = #{record.empPassword,jdbcType=VARCHAR},
      emp_grade = #{record.empGrade,jdbcType=VARCHAR},
      emp_email = #{record.empEmail,jdbcType=VARCHAR},
      emp_department_id = #{record.empDepartmentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wyj.model.Employee">
    update employee
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empGender != null">
        emp_gender = #{empGender,jdbcType=CHAR},
      </if>
      <if test="empPassword != null">
        emp_password = #{empPassword,jdbcType=VARCHAR},
      </if>
      <if test="empGrade != null">
        emp_grade = #{empGrade,jdbcType=VARCHAR},
      </if>
      <if test="empEmail != null">
        emp_email = #{empEmail,jdbcType=VARCHAR},
      </if>
      <if test="empDepartmentId != null">
        emp_department_id = #{empDepartmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wyj.model.Employee">
    update employee
    set emp_id = #{empId,jdbcType=INTEGER},
      emp_name = #{empName,jdbcType=VARCHAR},
      emp_gender = #{empGender,jdbcType=CHAR},
      emp_password = #{empPassword,jdbcType=VARCHAR},
      emp_grade = #{empGrade,jdbcType=VARCHAR},
      emp_email = #{empEmail,jdbcType=VARCHAR},
      emp_department_id = #{empDepartmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>